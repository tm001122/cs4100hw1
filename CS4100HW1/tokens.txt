 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / ) ; fundec ( % ) ; } return ( 0 ) ; } ( int * ) { ( > ) ; fundec ( % ) ; while ( * != 10 ) { fundec ( 50 20 10 ) ; fundec ( % ) ; } } ( int int * int * int * ) { if ( >= 50 ) * >= 1 ; else if ( >= 20 ) * >= 1 ; else * >= 1 ; } ( ) { fundec ( - % ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int ( ) { char ; int ; int ; int ; int ; { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } fundec ( == || == ) ; return ( 0 ) ; } fundec ( int * ) { int ; fundec ( > ) ; fundec ( % ) ; fundec ( % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( > ) ; fundec ( % ) ; } * = ; } fundec ( int int * int * int * ) { int ; int ; int ; int ; int ; = / 50 ; = % 50 ; = / 20 ; = % 20 ; = / 10 ; * = ; * = ; * = ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { int ; fundec ( ) ; fundec ( % ) ; while ( % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } * = ; } ( int int * int * int * ) { int ; = / 50 ; = - ( * 50 ) ; = / 20 ; = - ( * 20 ) ; = / 10 ; * = ; * = ; * = ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( ( int ) % 10 != 0 ) { fundec ( 10 ) ; fundec ( ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { = 0 ; while ( >= 50 ) { ++ ; - = 50 ; } = 0 ; while ( >= 20 ) { ++ ; - = 20 ; } = 0 ; while ( >= 10 ) { ++ ; - = 10 ; } } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } fundec ( 0 ) ; } fundec ( int * ) { int ; int ; fundec ( ) ; fundec ( % ) ; = % 10 ; while ( % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; = % 10 ; } * = ; } fundec ( int int * int * int * ) { int = 0 = 0 = 0 ; while ( > 0 ) { if ( >= 50 ) { - = 50 ; + = 1 ; } else if ( >= 20 ) { - = 20 ; + = 1 ; } else { - = 10 ; + = 1 ; } } * = ; * = ; * = ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( fundec ( / ) ) ; fundec ( % ) ; } fundec ( 0 ) ; } fundec ( int * ) { fundec ( ) ; fundec ( 10 > > ) ; fundec ( % ) ; while ( * % 10 != 0 || * < 0 ) { fundec ( 10 - > > ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { * = / 50 ; * = ( % 50 ) / 20 ; * = ( ( % 50 ) % 20 ) / 10 ; } fundec ( int int int int ) { fundec ( > > % ) ; fundec ( > % ) ; fundec ( > % ) ; fundec ( > % ) ; } 
 fundec ( int * ) ; ( int int * int * int * ) ; ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; ( ) ; ( ) ; fundec ( % ) ; fundec ( / ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } } ( int int * int * int * ) { int ; * = / 50 ; = % 50 ; * = / 20 ; = * / 20 ; * = * / 10 ; } ( int int int int ) { fundec ( * * * * * * ) ; fundec ( % ) ; fundec ( % ) ; fundec ( % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { int ; int ; * = * 1 / 50 ; = % 50 ; * = * 1 / 20 ; = % 20 ; * = * 1 / 10 ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { int ; fundec ( ) ; fundec ( % ) ; while ( % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } * = ; } ( int int * int * int * ) { int ; = / 50 ; = - ( * 50 ) ; = / 20 ; = - ( * 20 ) ; = / 10 ; * = ; * = ; * = ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char ; = ; fundec ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( fundec ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } ( int * ) { int ; int ; fundec ( ) ; fundec ( % ) ; = % 10 ; fundec ( != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; = % 10 ; } * = ; } fundec ( int int * int * int * ) { fundec ( >= 50 ) { * = / 50 ; * = % 50 / 20 ; * = % 50 % 20 / 10 ; } else fundec ( < 50 && >= 20 ) { * = 0 ; * = / 20 ; * = ( - * * 20 ) / 10 ; } else { * = 0 ; * = 0 ; * = 1 ; } } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( double double * double * double * ) ; fundec ( double double double double ) ; int fundec ( ) { int ; double ; char ; { fundec ( ( / ) ) ; fundec ( % ) ; if ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; } } while ( == || == ) ; return 0 ; } fundec ( int * ) { int ; { fundec ( ) ; fundec ( % ) ; = ( * % 10 ) ; if ( != 0 ) { fundec ( 10 ) ; } } while ( != 0 ) ; } fundec ( double double * double * double * ) { int ; = / 50 ; = ( - * 50 ) / 20 ; = ( - ( * 50 ) - ( * 20 ) ) / 10 ; * = ; * = ; * = ; } fundec ( double double double double ) { fundec ( % 0 ) ; fundec ( % 0 ) ; fundec ( % 0 ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; if ( == || == ) { } return 0 ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { int ; int ; * = / 50 ; = - ( / 50 ) ; * = / 20 ; = - ( / 20 ) ; * = / 10 ; } fundec ( int int int int ) { char ; fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 > 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } fundec ( = % * ) ; } fundec ( int int * int * int * ) { * = / 50 ; * = ( - ( * * 50 ) ) / 20 ; * = ( - ( * * 50 ) - ( * * 20 ) ) / 10 ; } fundec ( int int int int ) { fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 ; char ; { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } while ( == || == ) ; return ( 0 ) ; } fundec ( int * ) { ( ) ; ( % ) ; while ( ( * % 10 ) != 0 ) { fundec ( 50 20 10 ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { int ; if ( >= 50 ) { * = / 50 ; = % 50 ; if ( >= 20 ) { * = ( % 50 ) / 20 ; = ( % 50 ) % 20 ; } else if ( == 0 ) * = 0 ; if ( >= 10 ) * = ( ( % 50 ) % 20 ) / 10 ; else if ( == 0 ) * = 0 ; } else if ( >= 20 ) { * = / 20 ; = % 20 ; if ( >= 10 ) * = ( % 20 ) / 10 ; else * = 0 ; } else { * = / 10 ; } } fundec ( int int int int ) { ( % ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( -- > ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { * = / 50 ; * = % 50 / 20 ; * = % 50 % 20 / 10 ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char ; = ; fundec ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { * = / 50 ; * = % 50 / 20 ; * = ( % 50 - 20 * * ) / 10 ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int int * int * int * ) ; int fundec ( ) { int ; char ; = ; fundec ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( * * * for * * * ) ; fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; fundec ( ( / ) -- > ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( -- > ) ; fundec ( % ) ; fundec ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( -- > ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { * = / 50 ; * = ( % 50 ) / 20 ; * = ( ( % 50 ) % 20 ) / 10 ; } 
 fundec ( ) ; fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; fundec ( ) ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } fundec ( 0 ) ; } fundec ( ) { fundec ( ) ; fundec ( / 50 20 ) ; fundec ( 10 ) ; } ( int * ) { int ; fundec ( > ) ; fundec ( % ) ; = % 10 ; while ( % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( > ) ; fundec ( % ) ; = % 10 ; } * = ; } fundec ( int int * int * int * ) { int = 0 = 0 = 0 ; fundec ( > 0 ) { fundec ( >= 50 ) { + = 1 ; - = 50 ; } else fundec ( >= 20 ) { + = 1 ; - = 20 ; } else { + = 1 ; - = 10 ; } } * = ; * = ; * = ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 int fundec ( int * ) ; int fundec ( int int * int * int * ) ; int fundec ( int int int int ) ; int fundec ( ) { char ; int ; int = 0 ; fundec ( == 0 ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( % ) ; fundec ( == || == ) { = 1 ; } else fundec ( == || == ) { } else { int = 0 ; fundec ( == 0 ) { fundec ( / ) ; fundec ( % ) ; fundec ( == || == ) { return 0 ; } else fundec ( == || == ) { = 1 ; } } } } return 0 ; } int fundec ( int * ) { fundec ( ) ; fundec ( % * ) ; fundec ( 0 != * % 10 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % * ) ; } return 0 ; } int fundec ( int int * int * int * ) { * = / 50 ; = - ( * * 50 ) ; * = / 20 ; = - ( * * 20 ) ; * = / 10 ; return 0 ; } int fundec ( int int int int ) { fundec ( % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; return 0 ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char ; fundec ( ) ; { = 0 ; = 0 ; = 0 ; fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) > ) ; fundec ( % ) ; } while ( == ) ; return 0 ; } fundec ( int * ) { int ; char ; { fundec ( > ) ; = fundec ( % ) ; if ( == 0 ) { fundec ( % ) ; fundec ( * * * * % * * * * ) ; = 0 ; } else if ( * % 10 != 0 ) { fundec ( ) ; = 0 ; } else { = 1 ; } } while ( == 0 ) ; } fundec ( int int * int * int * ) { while ( > 0 ) { if ( >= 50 ) { * + = 1 ; - = 50 ; } else if ( >= 20 ) { * + = 1 ; - = 20 ; } else { * + = 1 ; - = 10 ; } } } fundec ( int int int int ) { fundec ( % ) ; fundec ( % % % ) ; } 
 int ( int * ) ; int ( int int * int * int * ) ; int ( int int int int ) ; int fundec ( ) { int ; char ; = ; fundec ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / ) ; ( % ) ; } return ( 0 ) ; } int fundec ( int * ) { ( 10 ) ; ( % ) ; while ( * % 10 != 0 ) { fundec ( ) ; ( % ) ; } fundec ( 0 ) ; } int fundec ( int int * int * int * ) { int ; if ( % 50 == 0 ) { * = / 50 ; * = 0 ; * = 0 ; } else if ( % 20 == 0 ) { * = / 50 ; = % 50 ; * = / 20 ; = % 20 ; * = / 10 ; } else if ( % 10 == 0 ) { * = / 50 ; = % 50 ; * = / 20 ; = % 20 ; * = / 10 ; } fundec ( 0 ) ; } int ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % fundec ( ) % fundec ( ) % fundec ( ) ) ; fundec ( 0 ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } fundec ( 0 ) ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { * = / 50 ; * = % 50 / 20 ; * = % 50 % 20 / 10 ; } fundec ( int int int int ) { fundec ( = % 4 ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; fundec ( ) ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( 10 > ) ; fundec ( % * ) ; fundec ( * % 10 != 0 ) { fundec ( 10 > ) ; fundec ( % * ) ; } } fundec ( int int * int * int * ) { * = / 50 ; = % 50 ; * = / 20 ; = % 20 ; * = / 10 ; } fundec ( int int int int ) { fundec ( = % 2 ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { int ; * = / 50 ; = % 50 ; * = / 20 ; = % 20 ; * = / 10 ; } fundec ( int int int int ) { fundec ( % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { int ; fundec ( ) ; fundec ( % ) ; = * % 10 ; if ( == 0 ) ; else { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { * = / 50 ; = - ( * ) * 50 ; * = / 20 ; = - ( * ) * 20 ; * = / 10 ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char ; { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( % ) ; } while ( == || == ) ; fundec ( 0 ) ; } fundec ( int * ) { fundec ( -- > ) ; fundec ( % ) ; while ( * % 10 ) { fundec ( 50 20 10 ) ; fundec ( -- > ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { if ( >= 10 ) { * = ( / 50 ) ; = - ( * * 50 ) ; * = ( / 20 ) ; = - ( * * 20 ) ; * = ( / 10 ) ; = - ( * * 10 ) ; } } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * ) ; fundec ( % % % ) ; } 
 int fundec ( int ) ; int fundec ( ) { int ; { fundec ( ) ; fundec ( % ) ; = % 10 ; fundec ( != 0 ) { fundec ( 10 ) ; fundec ( ) ; fundec ( % ) ; = % 10 ; } fundec ( == 10 ) { fundec ( 0 0 1 ) ; } else fundec ( == 20 ) { fundec ( 0 1 0 ) ; } else fundec ( == 30 ) { fundec ( 0 1 1 ) ; } else fundec ( == 40 ) { fundec ( 0 2 0 ) ; } else fundec ( == 50 ) { fundec ( 1 0 0 ) ; } else { fundec ( 50 ) ; } fundec ( ( / ) ) ; fundec ( % ) ; } fundec ( = ) ; fundec ( 0 ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; fundec ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { fundec ( 10 > ) ; fundec ( % ) ; fundec ( * % 10 != 0 || * <= 0 ) { fundec ( % 10 * ) ; fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( 10 > ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { * = / 50 ; * = ( - ( * * 50 ) ) / 20 ; * = ( - ( * * 50 ) - ( * * 20 ) ) / 10 ; } fundec ( int int int int ) { fundec ( % ) ; fundec ( * * * * * * ) ; fundec ( % % ) ; fundec ( % ) ; } 
 ( int * ) ; ( int int * int * int * ) ; ( int int int int ) ; int ( ) { int ; int ; int ; int ; char = ; fundec ( == || == ) { ( ) ; ( ) ; ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } ( int * ) { fundec ( ) ; fundec ( % ) ; fundec ( ( * % 10 ) != 0 ) { fundec ( ) ; fundec ( % ) ; } } ( int int * int * int * ) { * = / 50 ; * = ( % 50 ) / 20 ; * = ( ( % 50 ) % 20 ) / 10 ; } ( int int int int ) { fundec ( = % ) ; fundec ( % ) ; fundec ( % ) ; fundec ( % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; fundec ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( fundec ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } ( int * ) { int ; int ; fundec ( ) ; fundec ( % ) ; = % 10 ; fundec ( != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; = % 10 ; } * = ; } fundec ( int int * int * int * ) { fundec ( >= 50 ) { * = / 50 ; * = % 50 / 20 ; * = % 50 % 20 / 10 ; } else fundec ( < 50 && >= 20 ) { * = 0 ; * = / 20 ; * = ( - * * 20 ) / 10 ; } else { * = 0 ; * = 0 ; * = 1 ; } } fundec ( int int int int ) { fundec ( = % ) ; fundec ( ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { int ; fundec ( ) ; fundec ( % ) ; = % 10 ; while ( != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } * = ; } fundec ( int int * int * int * ) { if ( >= 50 ) { = / 50 ; * = ; } else if ( >= 20 && < 50 ) { = / 20 ; * = ; } else if ( >= 0 && < 20 ) { = / 10 ; * = ; } } fundec ( int int int int ) { fundec ( % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 ( int * ) ; ( int int * int * int * ) ; ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { int ; fundec ( > ) ; fundec ( % ) ; while ( % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } * = ; } ( int int * int * int * ) { int ; int ; * = / 50 ; = % 50 ; * = / 20 ; = % 20 ; * = / 10 ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; fundec ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( ) ; fundec ( ) ; fundec ( % ) ; fundec ( * % 10 != 0 ) { fundec ( ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { int = 0 ; int = 0 ; int = 0 ; fundec ( != 0 ) { fundec ( >= 50 ) { = - 50 ; = + 1 ; } else fundec ( >= 20 ) { = - 20 ; = + 1 ; } else { = - 10 ; = + 1 ; } } * = ; * = ; * = ; } fundec ( int int int int ) { fundec ( % ) ; fundec ( % fundec ( ) ) ; fundec ( % fundec ( ) ) ; fundec ( % fundec ( ) ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( - ) ; != % 10 ; fundec ( 0 ) ; } fundec ( int * ) { fundec ( ( ) > ) ; fundec ( % ) ; { fundec ( 10 ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { int ; fundec ( = ; >= 1 ; ) { * = % 50 ; * = * % 20 ; * = * % 10 ; } } fundec ( int int int int ) { fundec ( % ) ; fundec ( % 50 ) ; fundec ( % 20 ) ; fundec ( % 10 ) ; } 
 fundec ( int * ) ; ( int int * int * int * ) ; ( int int int int ) ; char = ; int fundec ( ) { int ; char ; for ( = ; != ; fundec ( % ) ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / > ) ; } fundec ( ) ; fundec ( 0 ) ; } ( int * ) { int ; fundec ( ) ; fundec ( % ) ; = * % 10 ; while ( != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; = * % 10 ; } } ( int int * int * int * ) { int ; if ( >= 50 ) { * = ( / 50 ) ; = - ( * * 50 ) ; * = ( / 20 ) ; - = ( * * 20 ) ; * = ( / 10 ) ; } else if ( < 50 || > 10 ) { * = 0 ; * = / 20 ; = - ( * * 20 ) ; * = / 10 ; } else if ( == 10 ) { * = 0 ; * = 0 ; * = 1 ; } } ( int int int int ) { fundec ( % ) ; fundec ( * * * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int ( ) { int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { int ; int ; fundec ( ) ; fundec ( % ) ; = % 10 ; while ( != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } * = ; } fundec ( int int * int * int * ) { * = / 50 ; * = ( % = 50 ) / 20 ; * = ( % = 20 ) / 10 ; } ( int int int int ) { fundec ( - % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char ; { fundec ( ) ; fundec ( ) ; fundec ( ) ; ( ) ; ( % ) ; } while ( == || == ) ; return ( 0 ) ; } fundec ( int * ) { ( ) ; ( % ) ; while ( * % 10 ) { ( 50 20 10 ) ; ( ) ; ( % ) ; } } ( int int * int * int * ) { if ( >= 10 ) ; { * = ( / 50 ) ; = - ( * * 50 ) ; * = ( / 20 ) ; = - ( * * 20 ) ; * = ( / 10 ) ; = - ( * * 10 ) ; } } fundec ( ) { ( = % ) ; ( * * * * * * ) ; ( % % % ) ; } 
 int fundec ( int * ) { fundec ( ) ; fundec ( % ) ; fundec ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } fundec ( 0 ) ; } int fundec ( int int * int * int * ) { int ; fundec ( % 50 == 0 ) { * = / 50 ; * = 0 ; * = 0 ; } else fundec ( % 20 == 0 ) { * = / 50 ; = % 50 ; * = / 20 ; = % 20 ; * = / 10 ; } else { * = / 50 ; = % 50 ; * = / 20 ; = % 20 ; * = / 10 ; } fundec ( 0 ) ; } int fundec ( int int int int ) { fundec ( % ) ; fundec ( * * * * * * ) ; fundec ( % % % fundec ( ) ) ; fundec ( 0 ) ; } int fundec ( ) { int ; char ; = ; fundec ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } fundec ( 0 ) ; } 
 fundec ( int * ) ; ( int int * int * int * ) ; ( int int int int ) ; char = ; int fundec ( ) { int ; int ; char ; for ( = ; != ; fundec ( % ) ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / > ) ; } fundec ( ) ; fundec ( 0 ) ; } ( int * ) { int ; fundec ( ) ; fundec ( % ) ; = * % 10 ; while ( != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; = * % 10 ; } } ( int int * int * int * ) { int ; if ( >= 50 ) { * = ( / 50 ) ; = - ( * * 50 ) ; * = ( / 20 ) ; = - ( * * 20 ) ; * = / 10 ; } else if ( < 50 && > 10 ) { * = 0 ; * = ( / 20 ) ; = - ( * * 20 ) ; * = / 10 ; } else if ( == 10 ) { * = 0 ; * = 0 ; * = 1 ; } } ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char ; { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } fundec ( == || == ) ; fundec ( ) ; fundec ( 0 ) ; } fundec ( int * ) { double ; int ; char ; fundec ( ) ; = fundec ( % ) ; fundec ( != 1 ) { fundec ( % ) ; fundec ( % ) ; fundec ( ) ; = fundec ( % ) ; } = * % 10 ; fundec ( != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; = * % 10 ; } } fundec ( int int * int * int * ) { int ; * = / 50 ; = % 50 ; * = / 20 ; = % 20 ; * = / 10 ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { char = ; int ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / ) ; fundec ( % ) ; } fundec ( 0 ) ; } fundec ( int * ) { int ; fundec ( = > ) ; fundec ( % ) ; = % 10 ; if ( == 0 ) * = ; else { fundec ( 50 20 10 ) ; fundec ( > ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { int ; if ( >= 50 ) { * = / 50 ; = - ( * * 50 ) ; if ( > 10 ) { * = / 20 ; = - ( * * 20 ) ; * = / 10 ; } else { * = 0 ; * = / 10 ; } } else if ( ( < 50 ) && ( > 10 ) ) { * = 0 ; * = / 20 ; = % 20 ; * = / 10 ; } else * = 0 ; * = 0 ; * = / 10 ; } fundec ( int int int int ) { fundec ( * * * * * * * * * * ) ; fundec ( % fundec ( ) % fundec ( ) % fundec ( ) ) ; } 
 fundec ( int * ) ; int fundec ( int int * int * int * ) ; fundec ( int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { ( ) ; ( ) ; ( ) ; fundec ( / ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } fundec ( = % * ) ; } int fundec ( int int * int * int * ) { int = 0 ; int = 0 ; int = 0 ; while ( > 0 ) { if ( >= 50 ) { + = 1 ; - = 50 ; } else if ( >= 20 ) { + = 1 ; - = 20 ; } else { + = 1 ; - = 10 ; } } * = ; * = ; * = ; } fundec ( int int int ) { fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 int fundec ( int * ) ; int fundec ( int int * int * int * ) ; int fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / ) ; fundec ( % ) ; } return ( 0 ) ; } int fundec ( int * ) { fundec ( 10 50 ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( ) ; fundec ( % ) ; } } int fundec ( int int * int * int * ) { int ; int ; if ( % 50 == 0 ) { * = / 50 ; * = 0 ; * = 0 ; } else if ( % 20 == 0 ) { * = / 50 ; = % 50 ; * = / 20 ; = % 20 ; * = / 10 ; } else if ( % 10 == 0 ) { * = / 50 ; = % 50 ; * = / 20 ; = % 20 ; * = / 10 ; } return ( 0 ) ; } int fundec ( int int int int ) { fundec ( % ) ; fundec ( % ) ; fundec ( % ) ; fundec ( % ) ; } 
 15 12 21 03 2010 - 011 % > 80 = 80 * * * * * * 1 1 1 > 55 = 60 * * * * * * 1 0 1 - 011 % - 011 % 15 12 21 36 2010 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; fundec ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } fundec ( 0 ) ; } fundec ( int * ) { double ; fundec ( ) ; fundec ( % ) ; = * % 10 ; fundec ( != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; = * % 10 ; } } fundec ( int int * int * int * ) { * = ( int ) / 50 ; * = ( int ) ( % 50 ) / 20 ; * = ( ( % 50 ) % 20 ) / 10 ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( double int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } } fundec ( double int * int * int * ) { if ( >= 10 ) { * = / 50 ; = - ( * * 50 ) ; * = / 20 ; = - ( * * 20 ) ; * = / 10 ; = - ( * * 10 ) ; } } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { * = / 50 ; * = ( % 50 ) / 20 ; * = ( ( % 50 ) % 20 ) / 10 ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( ( ( * ) % 10 ) != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { * = / 50 ; * = ( % 50 ) / 20 ; * = ( ( % 50 ) % 20 ) / 10 ; } ( int int int int ) { fundec ( = % ) ; fundec ( ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; int ; int ; int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return 0 ; } fundec ( int * ) { fundec ( ) ; fundec ( % ) ; while ( * % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { * = / 50 ; * = ( - * * 50 ) / 20 ; * = ( - * * 50 - * * 20 ) / 10 ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { char = ; int ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( ) / ( ) > > ) ; fundec ( % ) ; } fundec ( 0 ) ; } fundec ( int * ) { while ( * % 10 != 0 ) { fundec ( > > ) ; fundec ( % ) ; } } fundec ( int int * int * int * ) { fundec ( * = 0 ; >= 50 ; ++ * ) = - 50 ; fundec ( * = 0 ; >= 20 ; ++ * ) = - 20 ; fundec ( * = 0 ; >= 10 ; ++ * ) = - 10 ; } fundec ( int int int int ) { fundec ( % % % % ) ; } 
 fundec ( double * ) ; fundec ( double double * double * double * ) ; fundec ( double double double double ) ; int fundec ( ) { double ; double ; double ; double ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( / ) ; fundec ( % ) ; } return 0 ; } fundec ( double * ) { double ; { fundec ( -- > ) ; fundec ( % ) ; } fundec ( == 10 || == 20 || == 30 || == 40 || == 50 || == 60 || == 70 || == 80 || == 90 || == 100 ) { fundec ( = % ) ; } else if { fundec ( 50 20 10 / ) ; fundec ( ) ; fundec ( % ) ; } * = ; } fundec ( double char * int * double * ) { double ; if ( == 50 ) * = 1 ; else fundec ( == 100 ) * = 2 ; else if ( == 20 ) * = ; } fundec ( double double if double double ) { fundec ( % 4 ) ; fundec ( % ) ; fundec ( % ) ; fundec ( % 4 ) ; } 
 fundec ( int * ) ; fundec ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { char ; int ; int ; { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; fundec ( ) ; fundec ( != || != || != || != ) { fundec ( ) ; } else { } } fundec ( == || == ) ; fundec ( 0 ) ; } fundec ( int * ) { int ; fundec ( ) ; fundec ( % ) ; fundec ( * % 10 != 0 ) { { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; * = ; } fundec ( * % 10 != 0 ) ; } else { } } fundec ( int int * int * int * ) { * = / 50 ; * = ( - ( * * 50 ) ) / 20 ; * = ( - ( * * 50 ) - ( * * 20 ) ) / 10 ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % fundec ( ) % fundec ( ) % fundec ( ) ) ; } 
 fundec ( int * ) ; ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { int ; fundec ( ) ; fundec ( % ) ; while ( % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } * = ; } ( int int * int * int * ) { int ; = / 50 ; = - ( * 50 ) ; = / 20 ; = - ( * 20 ) ; = / 10 ; * = ; * = ; * = ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
 fundec ( int * ) ; ( int int * int * int * ) ; fundec ( int int int int ) ; int fundec ( ) { int ; char = ; while ( == || == ) { fundec ( ) ; fundec ( ) ; fundec ( ) ; fundec ( ( / ) ) ; fundec ( % ) ; } return ( 0 ) ; } fundec ( int * ) { int ; fundec ( ) ; fundec ( % ) ; while ( % 10 != 0 ) { fundec ( 50 20 10 ) ; fundec ( ) ; fundec ( % ) ; } * = ; } ( int int * int * int * ) { int ; = / 50 ; = - ( * 50 ) ; = / 20 ; = - ( * 20 ) ; = / 10 ; * = ; * = ; * = ; } fundec ( int int int int ) { fundec ( = % ) ; fundec ( * * * * * * ) ; fundec ( % % % ) ; } 
