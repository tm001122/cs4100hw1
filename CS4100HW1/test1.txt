fundec ( int * ) ;fundec ( double int * int * int * ) ;fundec ( int int int int ) ;int fundec ( ) { int ;char = ;while ( == || == ) { fundec ( ) ;fundec ( ) ;fundec ( ) ;fundec ( ( / ) ) ;fundec ( % ) ;} return ( 0 ) ;} fundec ( int * ) { fundec ( ) ;fundec ( % ) ;while ( * % 10 ) { fundec ( 50 20 10 ) ;fundec ( ) ;fundec ( % ) ;} } fundec ( double int * int * int * ) { if ( >= 10 ) { * = / 50 ;= - ( * * 50 ) ;* = / 20 ;= - ( * * 20 ) ;* = / 10 ;= - ( * * 10 ) ;} } fundec ( int int int int ) { fundec ( = % ) ;fundec ( * * * * * * ) ;fundec ( % % % ) ;}
fundec ( int * ) ;fundec ( int int * int * int * ) ;fundec ( int int int int ) ;int fundec ( ) { int ;int ;int ;int ;char = ;fundec ( == || == ) { fundec ( ) ;fundec ( ) ;fundec ( ) ;fundec ( ) ;fundec ( % ) ;} return 0 ;} fundec ( int * ) { fundec ( ) ;fundec ( ) ;fundec ( % ) ;fundec ( * % 10 != 0 ) { fundec ( ) ;fundec ( % ) ;} } fundec ( int int * int * int * ) { int = 0 ;int = 0 ;int = 0 ;fundec ( != 0 ) { fundec ( >= 50 ) { = - 50 ;= + 1 ;} else fundec ( >= 20 ) { = - 20 ;= + 1 ;} else { = - 10 ;= + 1 ;} } * = ;* = ;* = ;} fundec ( int int int int ) { fundec ( % ) ;fundec ( % fundec ( ) ) ;fundec ( % fundec ( ) ) ;fundec ( % fundec ( ) ) ;}